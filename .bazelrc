# Enable logging rc options.
common --announce_rc

# Enable Bzlmod for every Bazel command
common --enable_bzlmod

# Enable verbose failures for testing only.
build --verbose_failures

# Set the default Apple platform to macOS.
build --apple_platform_type=macos

# By default, build in C++ 20 mode.
build --enable_platform_specific_config
build:linux --cxxopt=-std=c++20
build:linux --host_cxxopt=-std=c++20
build:macos --cxxopt=-std=c++20 --features=-supports_dynamic_linker
build:macos --host_cxxopt=-std=c++20 --features=-supports_dynamic_linker
build:windows --cxxopt=/std:c++20
build:windows --host_cxxopt=/std:c++20

# Enable the runfiles symlink tree on Windows. This makes it possible to build
# the pip package on Windows without an intermediate data-file archive, as the
# build_pip_package script in its current form (as of Aug 2023) uses the
# runfiles symlink tree to decide what to put into the Python wheel.
startup --windows_enable_symlinks
build:windows --enable_runfiles

# Print command lines for build commands.
#build --subcommands=pretty_print

# Enable logging error output.
test --test_output=errors
test --test_summary=detailed

# https://bazel.build/configure/best-practices#bazelrc-file
try-import %workspace%/user.bazelrc

# asan
build:asan --strip=never
build:asan --copt -fsanitize=address
build:asan --copt -DADDRESS_SANITIZER
build:asan --copt -O1
build:asan --copt -g
build:asan --copt -fno-omit-frame-pointer
build:asan --linkopt -fsanitize=address
